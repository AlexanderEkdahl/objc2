error[E0308]: mismatched types
  --> ui/msg_send_id_invalid_receiver.rs:8:55
   |
8  |     let _: Id<Object, Shared> = unsafe { msg_send_id![obj, alloc].unwrap() };
   |                                          -------------^^^--------
   |                                          |            |
   |                                          |            expected struct `objc2::runtime::Class`, found struct `objc2::runtime::Object`
   |                                          arguments to this function are incorrect
   |
   = note: expected reference `&objc2::runtime::Class`
              found reference `&objc2::runtime::Object`
note: associated function defined here
  --> $WORKSPACE/objc2/src/__macro_helpers.rs
   |
   |     unsafe fn send_message_id<A: MessageArguments>(
   |               ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `Assert<false, true, true>: MsgSendId<&objc2::runtime::Object, _>` is not satisfied
 --> ui/msg_send_id_invalid_receiver.rs:9:42
  |
9 |     let _: Id<Object, Shared> = unsafe { msg_send_id![obj, init].unwrap() };
  |                                          ^^^^^^^^^^^^^^^^^^^^^^^ the trait `MsgSendId<&objc2::runtime::Object, _>` is not implemented for `Assert<false, true, true>`
  |
  = help: the following other types implement trait `MsgSendId<T, U>`:
            <Assert<false, false, false> as MsgSendId<T, Option<Id<U, O>>>>
            <Assert<false, false, true> as MsgSendId<T, Option<Id<U, O>>>>
            <Assert<false, true, true> as MsgSendId<Id<T, O>, Option<Id<T, O>>>>
            <Assert<false, true, true> as MsgSendId<Option<Id<T, O>>, Option<Id<T, O>>>>
            <Assert<true, false, true> as MsgSendId<&objc2::runtime::Class, Option<Id<T, O>>>>
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Assert<false, true, true>: MsgSendId<&objc2::runtime::Class, _>` is not satisfied
  --> ui/msg_send_id_invalid_receiver.rs:12:42
   |
12 |     let _: Id<Object, Shared> = unsafe { msg_send_id![cls, init].unwrap() };
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^ the trait `MsgSendId<&objc2::runtime::Class, _>` is not implemented for `Assert<false, true, true>`
   |
   = help: the following other types implement trait `MsgSendId<T, U>`:
             <Assert<false, false, false> as MsgSendId<T, Option<Id<U, O>>>>
             <Assert<false, false, true> as MsgSendId<T, Option<Id<U, O>>>>
             <Assert<false, true, true> as MsgSendId<Id<T, O>, Option<Id<T, O>>>>
             <Assert<false, true, true> as MsgSendId<Option<Id<T, O>>, Option<Id<T, O>>>>
             <Assert<true, false, true> as MsgSendId<&objc2::runtime::Class, Option<Id<T, O>>>>
   = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Id<objc2::runtime::Object, Shared>: MessageReceiver` is not satisfied
  --> ui/msg_send_id_invalid_receiver.rs:15:42
   |
15 |     let _: Id<Object, Shared> = unsafe { msg_send_id![obj, copy].unwrap() };
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^ the trait `MessageReceiver` is not implemented for `Id<objc2::runtime::Object, Shared>`
   |
   = help: the following other types implement trait `MessageReceiver`:
             &'a Id<T, O>
             &'a mut Id<T, objc2::rc::Owned>
   = note: required because of the requirements on the impl of `MsgSendId<Id<objc2::runtime::Object, Shared>, Option<Id<_, _>>>` for `Assert<false, false, true>`
   = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)
